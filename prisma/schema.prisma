generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id             Int                @id @unique @default(autoincrement())
  user_id        BigInt
  start_date     DateTime           @db.Timestamp(6)
  finish_date    DateTime           @db.Timestamp(6)
  duration       Int
  completed      Boolean
  group_activity Boolean
  type           activity_type_enum
  channel_id     BigInt
  data           Json               @db.Json


  @@index([group_activity], map: "IDX_73e0d6954aecafe0383b77d390")
  @@index([completed], map: "IDX_d71ac68a9d4b4245287caab788")
  @@map("activity")
}

model Analytic {
  timestamp          BigInt  @id
  guildsCount        BigInt?
  membersCount       BigInt?
  monsterTasksCount  Int?
  skillingTasksCount Int?
  gatherTasksCounts	 BigInt?
  craftTasksCount    BigInt?

  minionsCount       Int?
  ironMinionsCount   Int?

  totalSacrificed    BigInt?
  totalGP            BigInt?
  duelTaxBank        BigInt?
  dailiesAmount      BigInt?
  gpSellingItems     BigInt?
  gpPvm              BigInt?
  gpDice             BigInt?
  gpOpen             BigInt?
  gpDaily            BigInt?
  gpLuckypick        BigInt?

  @@map("analytics_table")
}

model ClientStorage {
  id                           String   @id @db.VarChar(19)
  userBlacklist                String[] @db.VarChar(19)
  guildBlacklist               String[] @db.VarChar(19)
  commandStats                 Json     @default("{}") @db.Json
  totalCommandsUsed            Int      @default(0)
  prices                       Json     @default("{}") @db.Json
  sold_items_bank              Json     @default("{}") @db.Json
  collecting_cost              Json     @default("{}") @db.Json
  collecting_loot              Json     @default("{}") @db.Json
  economyStats_duelTaxBank     Int      @default(0) @map("economyStats.duelTaxBank")
  economyStats_dailiesAmount   Int      @default(0) @map("economyStats.dailiesAmount")
  economyStats_itemSellTaxBank Int      @default(0) @map("economyStats.itemSellTaxBank")
  economyStats_bankBgCostBank  Json     @default("{}") @map("economyStats.bankBgCostBank") @db.Json
  economyStats_sacrificedBank  Json     @default("{}") @map("economyStats.sacrificedBank") @db.Json
  economyStats_PVMCost         Json     @default("{}") @map("economyStats.PVMCost") @db.Json
  gp_sell                      BigInt   @default(0)
  gp_pvm                       BigInt   @default(0)
  gp_open                      BigInt   @default(0)
  gp_daily                     BigInt   @default(0)
  gp_luckypick                 BigInt   @default(0)
  locked_skills                Json[]   @db.Json
  custom_prices                Json     @default("{}") @db.Json
  create_cost                  Json     @default("{}") @db.Json
  create_loot                  Json     @default("{}") @db.Json
  degraded_items_cost          Json     @default("{}") @db.Json

  disabled_commands            String[] @db.VarChar(32)

  @@map("clientStorage")
}

model GearPreset {
  user_id    String @db.VarChar(19)
  name       String @db.VarChar(12)
  helm       Int?
  chest      Int?
  belt       Int?
  legs       Int?
  gloves     Int?
  boots      Int?
  cape       Int?
  neck       Int?
  ring       Int?
  gems       Json @default("{}") @db.Json
  two_handed Int?
  weapon     Int?
  shield     Int?
  ammo       Int?
  ammo_qty   Int?

  @@id([user_id, name])
  @@map("gear_presets")
}

model Giveaway {
  id          Int      @default(autoincrement())
  user_id     String   @db.VarChar(19)
  start_date  DateTime @db.Timestamp(6)
  finish_date DateTime @db.Timestamp(6)
  duration    Int
  completed   Boolean
  channel_id  String   @db.VarChar(19)
  loot        Json     @db.Json
  message_id  String   @db.VarChar(19)
  reaction_id String   @db.VarChar(19)

  @@id([id, user_id, channel_id, message_id, reaction_id], map: "PK_8dea3077ffeea92ada02ce88acc")
  @@index([completed], map: "IDX_8d425a61b6093dd2351153b143")
  @@map("giveaway")
}

model Guild {
  id                String   @id @db.VarChar(19)
  prefix            String   @default("+")
  language          String   @default("en-US") @db.VarChar(5)
  disabledCommands  String[]
  jmodComments      String?  @db.VarChar(19)
  petchannel        String?  @db.VarChar(19)
  tweetchannel      String?  @db.VarChar(19)
  levelUpMessages   String?  @db.VarChar(19)
  staffOnlyChannels String[] @db.VarChar(19)

  @@map("guilds")
}

model NewUser {
  id            String  @id @db.VarChar(19)
  username      String? @db.VarChar(32)
  pizazz_points Int     @default(0)

  // Relations
  minigame_id  Int?         @unique
  minigame     Minigame?    @relation(fields: [minigame_id], references: [id])
  slayer_tasks SlayerTask[]

  @@map("new_users")
}

model PingableRole {
  id      Int    @id @default(autoincrement())
  role_id String @unique @db.VarChar(19)
  name    String @db.VarChar(32)

  @@map("pingable_roles")
}

model PlayerOwnedHouse {
  user_id            String @id @db.VarChar(19)
  background_id      Int    @default(1)
  altar              Int?
  throne             Int?
  mounted_cape       Int?
  mounted_fish       Int?
  mounted_head       Int?
  mounted_item       Int?
  jewellery_box      Int?
  prayer_altar       Int?
  spellbook_altar    Int?
  guard              Int?
  torch              Int?
  dungeon_decoration Int?
  prison             Int?
  pool               Int?
  teleport           Int?
  garden_decoration  Int?

  @@map("poh")
}

model SlayerTask {
  id                 Int      @id @default(autoincrement())
  created_at         DateTime @default(now()) @db.Timestamp(6)
  quantity           Int      @db.SmallInt
  quantity_remaining Int      @db.SmallInt
  slayer_master_id   Int      @db.SmallInt
  monster_id         Int
  skipped            Boolean
  user_id            String   @db.VarChar(19)
  new_user           NewUser  @relation(fields: [user_id], references: [id])

  @@index([user_id, quantity_remaining])
  @@map("slayer_tasks")
}

model User {
  id                         String   @id @db.VarChar(19)
  GP                         BigInt   @default(0)
  QP                         Int      @default(0)
  RSN                        String?
  pets                       Json     @default("{}") @db.Json
  mounts                     Json     @default("{}") @db.Json
  badges                     Int[]
  bitfield                   Int[]
  favoriteItems              Int[]
  favorite_alchables         Int[]
  favorite_food              Int[]
  sacrificedValue            BigInt   @default(0)
  bank                       Json     @default("{}") @db.Json
  collectionLogBank          Json     @default("{}") @db.JsonB
  creatureScores             Json     @default("{}") @db.Json
  monsterScores              Json     @default("{}") @db.Json
  bankBackground             Int      @default(1)
  sacrificedBank             Json     @default("{}") @db.Json
  patreon_id                 String?
  github_id                  Int?
  openable_scores            Json     @default("{}") @db.Json
  attack_style               String[]
  combat_options             Int[]
  bank_bg_hex                String?
  minion_name                String?  @map("minion.name")
  minion_hasBought           Boolean  @default(false) @map("minion.hasBought")
  minion_ironman             Boolean  @default(false) @map("minion.ironman")
  minion_icon                String?  @map("minion.icon")
  minion_equippedPet         Int?     @map("minion.equippedPet")
  stats_deaths               Int      @default(0) @map("stats.deaths")
  stats_duelLosses           Int      @default(0) @map("stats.duelLosses")
  stats_duelWins             Int      @default(0) @map("stats.duelWins")
  skills_mining              BigInt   @default(0) @map("skills.mining")
  skills_fishing             BigInt   @default(0) @map("skills.fishing")
  skills_woodcutting         BigInt   @default(0) @map("skills.woodcutting")
  skills_gathering           BigInt   @default(0) @map("skills.gathering")
  skills_metallurgy          BigInt   @default(0) @map("skills.metallurgy")
  skills_blacksmithing       BigInt   @default(0) @map("skills.blacksmithing")
  skills_cooking             BigInt   @default(0) @map("skills.cooking")
  skills_carpentry           BigInt   @default(0) @map("skills.carpentry")
  skills_weaving             BigInt   @default(0) @map("skills.weaving")
  skills_fletching           BigInt   @default(0) @map("skills.fletching")
  skills_tailoring           BigInt   @default(0) @map("skills.tailoring")
  skills_strength            BigInt   @default(0) @map("skills.strength")
  skills_dexterity           BigInt   @default(0) @map("skills.dexterity")
  skills_defence             BigInt   @default(0) @map("skills.defence")
  skills_intellect           BigInt   @default(0) @map("skills.intellect")
  skills_vitality            BigInt   @default(0) @map("skills.vitality")
  skills_piercing            BigInt   @default(0) @map("skills.piercing")
  skills_fencing             BigInt   @default(0) @map("skills.fencing")
  skills_heavyWeapons        BigInt   @default(0) @map("skills.heavyWeapons")
  skills_magicStaffs         BigInt   @default(0) @map("skills.magicStaffs")
  skills_rangedWeapons       BigInt   @default(0) @map("skills.rangedWeapons")
  gear_active                Json?    @map("gear.active") @db.Json
  gear_secondary             Json?    @map("gear.secondary") @db.Json
  gear_skilling              Json?    @map("gear.skilling") @db.Json

  premium_balance_tier        Int?
  premium_balance_expiry_date BigInt?

  temp_cl            Json      @default("{}") @db.Json
  last_temp_cl_reset DateTime? @db.Timestamp(6)

  @@map("users")
}

model Webhook {
  channel_id    String @id @db.VarChar(19)
  webhook_id    String @db.VarChar(19)
  webhook_token String @db.VarChar(100)

  @@map("webhook_table")
}

model XPGain {
  id         Int                 @id @default(autoincrement())
  user_id    BigInt
  date       DateTime            @default(now()) @db.Timestamp(6)
  skill      xp_gains_skill_enum
  xp         Int
  artificial Boolean?
  post_max   Boolean             @default(false)

  @@index([date])
  @@index([skill])
  @@map("xp_gains")
}

model Metric {
  timestamp          BigInt @id
  eventLoopDelayMin  Float  @db.Real
  eventLoopDelayMax  Float  @db.Real
  eventLoopDelayMean Float  @db.Real
  memorySizeTotal    BigInt
  memorySizeUsed     BigInt
  memorySizeExternal BigInt
  memorySizeRSS      BigInt
  cpuUser            Float  @db.Real
  cpuSystem          Float  @db.Real
  cpuPercent         Float  @db.Real

  @@map("metrics")
}

model Minigame {
  id                      Int    @id @default(autoincrement())
  user_id                 String @unique @db.VarChar(19)
  

  new_user NewUser?
  @@map("minigames")
}

model CommandUsage {
  id           Int                  @id @default(autoincrement())
  date         DateTime             @db.Timestamp(6)
  user_id      String               @db.VarChar(19)
  command_name String               @db.VarChar(32)
  status       command_usage_status @default(value: Unknown)
  is_continue  Boolean              @default(false)
  flags        Json?
  inhibited    Boolean?             @default(false)

  args       Json?   @db.Json
  channel_id String? @db.VarChar(19)
  guild_id   String? @db.VarChar(19)

  @@map("command_usage")
}

enum loot_track_type {
  Monster
  Minigame
  Skilling
}

model LootTrack {
  id             String          @db.VarChar(32)
  type           loot_track_type
  // In minutes
  total_duration Int
  total_kc       Int
  loot           Json            @default("{}") @db.Json
  cost           Json            @default("{}") @db.Json

  @@id([id, type])
  @@map("loot_track")
}

model EconomyItem {
  item_id  Int
  quantity BigInt
  date     DateTime @default(now())

  @@id([item_id, date])
  @@map("economy_item")
}

enum command_usage_status {
  Unknown
  Success
  Error
  Inhibited
}

enum activity_type_enum {
  MonsterKilling
  GroupMonsterKilling
  TaskCompletion
  Mining
  Metallurgy
  Blacksmithing
  Fishing
  Cooking
  Woodcutting
  Carpentry
  Gathering
  Weaving
  Fletching
  Tailoring
}

enum xp_gains_skill_enum {
  mining
  fishing
  woodcutting
  gathering
  metallurgy
  blacksmithing
  cooking
  carpentry
  weaving
  fletching
  tailoring
  strength
  dexterity
  defence
  vitality
  intellect
  piercing
  fencing
  heavyweapons
  magicstaffs
  rangedweapons
}
