import { Client, SchemaFolder } from 'klasa';

import { SkillsEnum } from '../../skilling/types';

Client.defaultUserSchema
	.add('GP', 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
	.add('QP', 'integer', { default: 0 })
	.add('Account', 'string', { default: null })
	.add('pets', 'any', { default: {} })
	.add('mounts', 'any', { default: {} })
	.add('badges', 'integer', { array: true, default: [] })
	.add('bitfield', 'integer', { array: true, default: [] })
	.add('favoriteItems', 'integer', { array: true, default: [] })
	.add('favorite_food', 'integer', { array: true, default: [] })
	.add('sacrificedValue', 'integer', { default: 0, minimum: 0, maximum: Number.MAX_SAFE_INTEGER })
	.add('bank', 'any', { default: {} })
	.add('collectionLogBank', 'any', { default: {} })
	.add('monsterScores', 'any', { default: {} })
	.add('bankBackground', 'integer', { default: 1 })
	.add('sacrificedBank', 'any', { default: {} })
	.add('patreon_id', 'string', { default: null })
	.add('github_id', 'integer', { default: null })
	.add('openable_scores', 'any', { default: {} })
	.add('attack_style', 'string', { array: true, default: [] })
	.add('combat_options', 'integer', { array: true, default: [] })
	.add('bank_bg_hex', 'string', { default: null })
	.add('minion', folder =>
		folder
			.add('name', 'string')
			.add('hasBought', 'boolean', { default: false })
			.add('ironman', 'boolean', { default: false })
			.add('icon', 'string', { default: null })
			.add('equippedPet', 'integer', { default: null })
			.add('farmingContract', 'any', { default: null })
			.add('defaultCompostToUse', 'string', { default: 'compost' })
			.add('defaultPay', 'boolean', { default: false })
			.add('birdhouseTraps', 'any', { default: null })
	)
	.add('stats', (folder: SchemaFolder) =>
		folder
			.add('deaths', 'integer', { default: 0 })
			.add('duelLosses', 'integer', { default: 0 })
			.add('duelWins', 'integer', { default: 0 })
	)
	.add('skills', (folder: SchemaFolder) =>
		folder
			.add(SkillsEnum.Mining, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Fishing, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Woodcutting, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Gathering, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Metallurgy, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Blacksmithing, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Cooking, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Fletching, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Carpentry, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Weaving, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Tailoring, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Strength, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Dexterity, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Defence, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Intellect, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Vitality, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Piercing, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.Fencing, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.HeavyWeapons, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.RangedWeapons, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
			.add(SkillsEnum.MagicStaffs, 'integer', { default: 0, maximum: Number.MAX_SAFE_INTEGER })
	)
	.add('gear', (folder: SchemaFolder) =>
		folder
			.add('melee', 'any', { default: null })
			.add('magic', 'any', { default: null })
			.add('ranged', 'any', { default: null })
			.add('skilling', 'any', { default: null })
	)
	.add('premium_balance_tier', 'integer', { default: null })
	.add('premium_balance_expiry_date', 'integer', { default: null, maximum: Number.MAX_SAFE_INTEGER })
	.add('temp_cl', 'any', { default: {} });
